1 )  class Parent {
    void even() {
        System.out.println("Parent even method:");
        for (int i = 1; i <= 20; i++) {
            if (i % 2 == 0) {
                System.out.print(i + " ");
            }
        }
        System.out.println();
    }

    void odd() {
        System.out.println("Parent odd method:");
        for (int i = 1; i <= 20; i++) {
            if (i % 2 != 0) {
                System.out.print(i + " ");
            }
        }
        System.out.println();
    }

    void prime() {
        System.out.println("Parent prime method:");
        for (int i = 1; i <= 20; i++) {
            if (isPrime(i)) {
                System.out.print(i + " ");
            }
        }
        System.out.println();
    }

    boolean isPrime(int num) {
        if (num <= 1) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }
}

class Child extends Parent {
    @Override
    void even() {
        System.out.println("Child even method:");
        for (int i = 1; i <= 30; i++) {
            if (i % 2 == 0) {
                System.out.print(i + " ");
            }
        }
        System.out.println();
    }

    @Override
    void odd() {
        System.out.println("Child odd method:");
        for (int i = 1; i <= 30; i++) {
            if (i % 2 != 0) {
                System.out.print(i + " ");
            }
        }
        System.out.println();
    }

    @Override
    void prime() {
        System.out.println("Child prime method:");
        for (int i = 1; i <= 30; i++) {
            if (isPrime(i)) {
                System.out.print(i + " ");
            }
        }
        System.out.println();
    }
}

public class Main {
    public static void main(String[] args) {
        Child child = new Child();
        child.even();
        child.odd();
        child.prime();
    }
}

2) class Parent {
    int a, b;

    Parent() {
        a = 10;
        b = 15;
        System.out.println("Parent default constructor called");
    }

    void disp() {
        System.out.println("a = " + a + ", b = " + b);
    }
}

class Child extends Parent {
    // Parameterized constructor
    Child() {
        super(); 
        a = 20;
        b = 25;
        System.out.println("Child parameterized constructor called");
    }


    @Override
    void disp() {
        System.out.println("Child disp() method called");
        System.out.println("a = " + a + ", b = " + b);
    }
}

public class Main {
    public static void main(String[] args) {
        System.out.println("Creating Parent object:");
        Parent parent = new Parent();
        parent.disp();

        System.out.println("\nCreating Child object:");
        Child child = new Child();
        child.disp();
    }
}

3 ) class Base {
    void area(int a, int b) {
        System.out.println("Base class area method:");
        System.out.println("Area of square: " + a * a);
    }
}

class Derived extends Base {
    @Override
    void area(int a, int b) {
        System.out.println("Derived class area method:");
        System.out.println("Area of rectangle: " + a * b);
    }
}

public class Main {
    public static void main(String[] args) {
        System.out.println("Calling area method from Base class:");
        Base base = new Base();
        base.area(5, 5);

        System.out.println("\nCalling area method from Derived class:");
        Derived derived = new Derived();
        derived.area(4, 6);
    }
}
